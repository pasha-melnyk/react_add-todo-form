{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","name","email","TodoInfo","todo","title","classNames","completed","TodoList","preparedTodos","map","id","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","getUserById","userId","find","App","state","todoList","newTitle","selectedUserId","isTitleInvalid","isUserInvalid","handleTitleChange","event","setState","target","value","handleUserChange","handleSubmit","preventDefault","validateForm","addNewTodo","clearState","trim","getNewTodo","length","newTodo","this","onSubmit","htmlFor","type","onChange","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da8ca567.chunk.js","sourcesContent":["import './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    <h3 className=\"user__name\">{`by ${user.name}`}</h3>\n    <span className=\"user__info\">{user.email}</span>\n  </>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <h2 className=\"todo__title\">{todo.title}</h2>\n    <span>\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </span>\n    <br />\n    <span className={classNames(\n      'todo__status',\n      {\n        completed: todo.completed,\n      },\n    )}\n    >\n      {todo.completed ? 'Completed' : 'Not completed'}\n    </span>\n  </>\n);\n","import { TodoInfo } from '../TodoInfo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => (\n  <ul>\n    {preparedTodos.map(todo => (\n      <li key={todo.id} className=\"todo\">\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import users from './api/users';\n\nexport const getUserById = (userId: number) => (\n  users.find(user => user.id === userId)\n);\n","import React from 'react';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './helpers';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodos: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId) || null,\n}));\n\ntype State = {\n  todoList: Todo[];\n  newTitle: string;\n  selectedUserId: number;\n  isTitleInvalid: boolean;\n  isUserInvalid: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todoList: [...preparedTodos],\n    newTitle: '',\n    selectedUserId: 0,\n    isTitleInvalid: false,\n    isUserInvalid: false,\n  };\n\n  handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newTitle: event.target.value,\n      isTitleInvalid: false,\n    });\n  };\n\n  handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectedUserId: +event.target.value,\n      isUserInvalid: false,\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      this.addNewTodo();\n      this.clearState();\n    }\n  };\n\n  validateForm = () => {\n    const { selectedUserId, newTitle } = this.state;\n\n    if (!selectedUserId || !newTitle.trim()) {\n      this.setState({\n        isTitleInvalid: !newTitle.trim(),\n        isUserInvalid: !selectedUserId,\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  getNewTodo = () => {\n    const {\n      selectedUserId,\n      newTitle,\n      todoList,\n    } = this.state;\n\n    const newTodo = {\n      user: getUserById(selectedUserId) || null,\n      userId: selectedUserId,\n      id: todoList.length + 1,\n      title: newTitle.trim(),\n      completed: false,\n    };\n\n    return newTodo;\n  };\n\n  clearState = () => {\n    this.setState({\n      newTitle: '',\n      selectedUserId: 0,\n      isTitleInvalid: false,\n      isUserInvalid: false,\n    });\n  };\n\n  addNewTodo = () => {\n    const newTodo = this.getNewTodo();\n\n    this.setState((state) => ({\n      todoList: [...state.todoList, newTodo],\n    }));\n  };\n\n  render() {\n    const {\n      selectedUserId,\n      newTitle,\n      todoList,\n      isTitleInvalid,\n      isUserInvalid,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"form\">\n          <h2>Add todo form</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <label htmlFor=\"todo-title\">\n                <input\n                  type=\"text\"\n                  id=\"todo-title\"\n                  name=\"title\"\n                  value={newTitle}\n                  onChange={this.handleTitleChange}\n                  placeholder=\"Title\"\n                />\n              </label>\n              {isTitleInvalid && (\n                <span className=\"error\">Please enter the title</span>\n              )}\n            </div>\n\n            <div>\n              <select\n                name=\"selectedUserId\"\n                value={selectedUserId}\n                onChange={this.handleUserChange}\n              >\n                <option value=\"0\">Choose a user</option>\n                {users.map(user => (\n                  <option value={user.id}>{user.name}</option>\n                ))}\n              </select>\n              {isUserInvalid && (\n                <span className=\"error\">Please choose a user</span>\n              )}\n            </div>\n\n            <button type=\"submit\">Add</button>\n          </form>\n        </div>\n\n        <div>\n          <h2 className=\"list-title\">Static list of todos</h2>\n          <TodoList preparedTodos={todoList} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}